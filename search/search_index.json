{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Siddhi-execution-geo The siddhi-execution-geo extension is an extension to Siddhi that provides geo data related functionality such as checking whether a given geo coordinate is within a predefined geo-fence, etc. Following are the functions of the Geo extension. Find some useful links below: Source code Releases Issue tracker Latest API Docs Latest API Docs is 5.0.1 . How to use Using the extension in WSO2 Stream Processor You can use this extension in the latest WSO2 Stream Processor that is a part of WSO2 Analytics offering, with editor, debugger and simulation support. This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component jar that can be found in the STREAM_PROCESSOR_HOME /lib directory. Using the extension as a java library This extension can be added as a maven dependency along with other Siddhi dependencies to your project. dependency groupId org.wso2.extension.siddhi.execution.geo /groupId artifactId siddhi-execution-geo /artifactId version x.x.x /version /dependency Jenkins Build Status Branch Build Status master Features findCityFromIP (Function) This function returns the city that is related to the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. How to Contribute Please report issues at GitHub Issue Tracker . Send your contributions as pull requests to master branch . Contact us Post your questions with the \"Siddhi\" tag in Stackoverflow . Siddhi developers can be contacted via the mailing lists: Developers List : dev@wso2.org Architecture List : architecture@wso2.org Support We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. For more details and to take advantage of this unique opportunity contact us via http://wso2.com/support/ .","title":"Welcome"},{"location":"#siddhi-execution-geo","text":"The siddhi-execution-geo extension is an extension to Siddhi that provides geo data related functionality such as checking whether a given geo coordinate is within a predefined geo-fence, etc. Following are the functions of the Geo extension. Find some useful links below: Source code Releases Issue tracker","title":"Siddhi-execution-geo"},{"location":"#latest-api-docs","text":"Latest API Docs is 5.0.1 .","title":"Latest API Docs"},{"location":"#how-to-use","text":"Using the extension in WSO2 Stream Processor You can use this extension in the latest WSO2 Stream Processor that is a part of WSO2 Analytics offering, with editor, debugger and simulation support. This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component jar that can be found in the STREAM_PROCESSOR_HOME /lib directory. Using the extension as a java library This extension can be added as a maven dependency along with other Siddhi dependencies to your project. dependency groupId org.wso2.extension.siddhi.execution.geo /groupId artifactId siddhi-execution-geo /artifactId version x.x.x /version /dependency","title":"How to use"},{"location":"#jenkins-build-status","text":"Branch Build Status master","title":"Jenkins Build Status"},{"location":"#features","text":"findCityFromIP (Function) This function returns the city that is related to the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived.","title":"Features"},{"location":"#how-to-contribute","text":"Please report issues at GitHub Issue Tracker . Send your contributions as pull requests to master branch .","title":"How to Contribute"},{"location":"#contact-us","text":"Post your questions with the \"Siddhi\" tag in Stackoverflow . Siddhi developers can be contacted via the mailing lists: Developers List : dev@wso2.org Architecture List : architecture@wso2.org","title":"Contact us"},{"location":"#support","text":"We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. For more details and to take advantage of this unique opportunity contact us via http://wso2.com/support/ .","title":"Support"},{"location":"license/","text":"Copyright (c) 2017 WSO2 Inc. ( http://www.wso2.org ) All Rights Reserved. WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ------------------------------------------------------------------------- Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS","title":"License"},{"location":"api/4.0.10/","text":"API Docs - v4.0.10 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.10"},{"location":"api/4.0.10/#api-docs-v4010","text":"","title":"API Docs - v4.0.10"},{"location":"api/4.0.10/#geo","text":"","title":"Geo"},{"location":"api/4.0.10/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.10/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.11/","text":"API Docs - v4.0.11 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.11"},{"location":"api/4.0.11/#api-docs-v4011","text":"","title":"API Docs - v4.0.11"},{"location":"api/4.0.11/#geo","text":"","title":"Geo"},{"location":"api/4.0.11/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.11/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.12/","text":"API Docs - v4.0.12 Geo findCityFromIP (Function) Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address findCountryFromIP (Function) Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.12"},{"location":"api/4.0.12/#api-docs-v4012","text":"","title":"API Docs - v4.0.12"},{"location":"api/4.0.12/#geo","text":"","title":"Geo"},{"location":"api/4.0.12/#findcityfromip-function","text":"Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address","title":"findCityFromIP (Function)"},{"location":"api/4.0.12/#findcountryfromip-function","text":"Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address","title":"findCountryFromIP (Function)"},{"location":"api/4.0.12/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.12/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.13/","text":"API Docs - v4.0.13 Geo findCityFromIP (Function) Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address findCountryFromIP (Function) Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.13"},{"location":"api/4.0.13/#api-docs-v4013","text":"","title":"API Docs - v4.0.13"},{"location":"api/4.0.13/#geo","text":"","title":"Geo"},{"location":"api/4.0.13/#findcityfromip-function","text":"Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address","title":"findCityFromIP (Function)"},{"location":"api/4.0.13/#findcountryfromip-function","text":"Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address","title":"findCountryFromIP (Function)"},{"location":"api/4.0.13/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.13/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.14/","text":"API Docs - v4.0.14 Geo findCityFromIP (Function) Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address findCountryFromIP (Function) Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.14"},{"location":"api/4.0.14/#api-docs-v4014","text":"","title":"API Docs - v4.0.14"},{"location":"api/4.0.14/#geo","text":"","title":"Geo"},{"location":"api/4.0.14/#findcityfromip-function","text":"Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address","title":"findCityFromIP (Function)"},{"location":"api/4.0.14/#findcountryfromip-function","text":"Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address","title":"findCountryFromIP (Function)"},{"location":"api/4.0.14/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.14/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.15/","text":"API Docs - v4.0.15 Geo findCityFromIP (Function) Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address findCountryFromIP (Function) Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.15"},{"location":"api/4.0.15/#api-docs-v4015","text":"","title":"API Docs - v4.0.15"},{"location":"api/4.0.15/#geo","text":"","title":"Geo"},{"location":"api/4.0.15/#findcityfromip-function","text":"Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address","title":"findCityFromIP (Function)"},{"location":"api/4.0.15/#findcountryfromip-function","text":"Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address","title":"findCountryFromIP (Function)"},{"location":"api/4.0.15/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.15/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.16/","text":"API Docs - v4.0.16 Geo findCityFromIP (Function) Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address findCountryFromIP (Function) Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.16"},{"location":"api/4.0.16/#api-docs-v4016","text":"","title":"API Docs - v4.0.16"},{"location":"api/4.0.16/#geo","text":"","title":"Geo"},{"location":"api/4.0.16/#findcityfromip-function","text":"Returns the city which is related to the give ip address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant city STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This will return the corresponding city to the given ip address","title":"findCityFromIP (Function)"},{"location":"api/4.0.16/#findcountryfromip-function","text":"Returns the country which is related to the give ip address Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the relevant country STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This will return the corresponding country to the given ip address","title":"findCountryFromIP (Function)"},{"location":"api/4.0.16/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.16/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.17/","text":"API Docs - v4.0.17 Geo findCityFromIP (Function) This function returns the city that is related to the give IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This query returns the corresponding country of the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location Location details(Street name, number etc.). STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address Location details. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. e.g., If the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value of the required location. DOUBLE No No latitude The latitude value of the required location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.17"},{"location":"api/4.0.17/#api-docs-v4017","text":"","title":"API Docs - v4.0.17"},{"location":"api/4.0.17/#geo","text":"","title":"Geo"},{"location":"api/4.0.17/#findcityfromip-function","text":"This function returns the city that is related to the give IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/4.0.17/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This query returns the corresponding country of the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/4.0.17/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location Location details(Street name, number etc.). STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address Location details. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.17/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. e.g., If the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value of the required location. DOUBLE No No latitude The latitude value of the required location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.18/","text":"API Docs - v4.0.18 Geo findCityFromIP (Function) This function returns the city that is related to the give IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This query returns the corresponding country of the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location Location details(Street name, number etc.). STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address Location details. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. e.g., If the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value of the required location. DOUBLE No No latitude The latitude value of the required location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.18"},{"location":"api/4.0.18/#api-docs-v4018","text":"","title":"API Docs - v4.0.18"},{"location":"api/4.0.18/#geo","text":"","title":"Geo"},{"location":"api/4.0.18/#findcityfromip-function","text":"This function returns the city that is related to the give IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/4.0.18/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This query returns the corresponding country of the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/4.0.18/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location Location details(Street name, number etc.). STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address Location details. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.18/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. e.g., If the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value of the required location. DOUBLE No No latitude The latitude value of the required location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.19/","text":"API Docs - v4.0.19 Geo findCityFromIP (Function) This function returns the city that is related to the give IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This query returns the corresponding country of the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location Location details(Street name, number etc.). STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address Location details. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" geocoordinate (Stream Function) geocoordinate stream function returns the longitude and latitude values of a location which is related to the given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the longitude and latitude STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget IP information from their IP address geolocation database.This API provides an url to get the information based on IP address N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location which is related to the given IP DOUBLE latitude The latitude of the location which is related to the given IP DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into outputStream; This will return the longitude and latitude of the given IPV4 or IPV6 address. So the results for the geocoordinate(95.31.18.119) are 55.7522, 37.6156 reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. e.g., If the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value of the required location. DOUBLE No No latitude The latitude value of the required location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.19"},{"location":"api/4.0.19/#api-docs-v4019","text":"","title":"API Docs - v4.0.19"},{"location":"api/4.0.19/#geo","text":"","title":"Geo"},{"location":"api/4.0.19/#findcityfromip-function","text":"This function returns the city that is related to the give IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/4.0.19/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into outputStream; This query returns the corresponding country of the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/4.0.19/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location Location details(Street name, number etc.). STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address Location details. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.19/#geocoordinate-stream-function","text":"geocoordinate stream function returns the longitude and latitude values of a location which is related to the given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address that the user need to get the longitude and latitude STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget IP information from their IP address geolocation database.This API provides an url to get the information based on IP address N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location which is related to the given IP DOUBLE latitude The latitude of the location which is related to the given IP DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into outputStream; This will return the longitude and latitude of the given IPV4 or IPV6 address. So the results for the geocoordinate(95.31.18.119) are 55.7522, 37.6156","title":"geocoordinate (Stream Function)"},{"location":"api/4.0.19/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. e.g., If the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value of the required location. DOUBLE No No latitude The latitude value of the required location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.20/","text":"API Docs - v4.0.20 Geo findCityFromIP (Function) This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\". geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"4.0.20"},{"location":"api/4.0.20/#api-docs-v4020","text":"","title":"API Docs - v4.0.20"},{"location":"api/4.0.20/#geo","text":"","title":"Geo"},{"location":"api/4.0.20/#findcityfromip-function","text":"This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/4.0.20/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/4.0.20/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\".","title":"geocode (Stream Function)"},{"location":"api/4.0.20/#geocoordinate-stream-function","text":"The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156.","title":"geocoordinate (Stream Function)"},{"location":"api/4.0.20/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.4/","text":"API Docs - v4.0.4 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.4"},{"location":"api/4.0.4/#api-docs-v404","text":"","title":"API Docs - v4.0.4"},{"location":"api/4.0.4/#geo","text":"","title":"Geo"},{"location":"api/4.0.4/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.4/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.5/","text":"API Docs - v4.0.5 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.5"},{"location":"api/4.0.5/#api-docs-v405","text":"","title":"API Docs - v4.0.5"},{"location":"api/4.0.5/#geo","text":"","title":"Geo"},{"location":"api/4.0.5/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.5/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.6/","text":"API Docs - v4.0.6 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.6"},{"location":"api/4.0.6/#api-docs-v406","text":"","title":"API Docs - v4.0.6"},{"location":"api/4.0.6/#geo","text":"","title":"Geo"},{"location":"api/4.0.6/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.6/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.7/","text":"API Docs - v4.0.7 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.7"},{"location":"api/4.0.7/#api-docs-v407","text":"","title":"API Docs - v4.0.7"},{"location":"api/4.0.7/#geo","text":"","title":"Geo"},{"location":"api/4.0.7/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.7/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.8/","text":"API Docs - v4.0.8 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.8"},{"location":"api/4.0.8/#api-docs-v408","text":"","title":"API Docs - v4.0.8"},{"location":"api/4.0.8/#geo","text":"","title":"Geo"},{"location":"api/4.0.8/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.8/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.0.9/","text":"API Docs - v4.0.9 Geo geocode (Stream Function) Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\" reversegeocode (Stream Function) This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"4.0.9"},{"location":"api/4.0.9/#api-docs-v409","text":"","title":"API Docs - v4.0.9"},{"location":"api/4.0.9/#geo","text":"","title":"Geo"},{"location":"api/4.0.9/#geocode-stream-function","text":"Geo code stream function Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location location details(Street name, number etc.) STRING No No Extra Return Attributes Name Description Possible Types longitude Longitude of the location DOUBLE latitude Latitude of the location DOUBLE address Location details STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This will returns the longitude and latitude of the given location with the location details. so the results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\"","title":"geocode (Stream Function)"},{"location":"api/4.0.9/#reversegeocode-stream-function","text":"This extension transforms a latitude and longitude coordinates into precise address information. The output contains string properties streetNumber, neighborhood, route, administrativeAreaLevelTwo, administrativeAreaLevelOne, country, countryCode, postalCode and formattedAddress in order. However, these information are not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information like country will be returned. For those which are not available, this extension will return \"N/A\" as the value. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude longitude value of the required location DOUBLE No No latitude latitude value of the required location DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This will return the precise address information of the given location. On this case this will return \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\"","title":"reversegeocode (Stream Function)"},{"location":"api/4.1.0/","text":"API Docs - v4.1.0 Geo findCityFromIP (Function) This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\". geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"4.1.0"},{"location":"api/4.1.0/#api-docs-v410","text":"","title":"API Docs - v4.1.0"},{"location":"api/4.1.0/#geo","text":"","title":"Geo"},{"location":"api/4.1.0/#findcityfromip-function","text":"This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/4.1.0/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/4.1.0/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\".","title":"geocode (Stream Function)"},{"location":"api/4.1.0/#geocoordinate-stream-function","text":"The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156.","title":"geocoordinate (Stream Function)"},{"location":"api/4.1.0/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"reversegeocode (Stream Function)"},{"location":"api/4.1.1/","text":"API Docs - v4.1.1 Geo findCityFromIP (Function) This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\". geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"4.1.1"},{"location":"api/4.1.1/#api-docs-v411","text":"","title":"API Docs - v4.1.1"},{"location":"api/4.1.1/#geo","text":"","title":"Geo"},{"location":"api/4.1.1/#findcityfromip-function","text":"This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/4.1.1/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/4.1.1/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\".","title":"geocode (Stream Function)"},{"location":"api/4.1.1/#geocoordinate-stream-function","text":"The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156.","title":"geocoordinate (Stream Function)"},{"location":"api/4.1.1/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"reversegeocode (Stream Function)"},{"location":"api/5.0.0/","text":"API Docs - v5.0.0 Geo findCityFromIP (Function) This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\". geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"5.0.0"},{"location":"api/5.0.0/#api-docs-v500","text":"","title":"API Docs - v5.0.0"},{"location":"api/5.0.0/#geo","text":"","title":"Geo"},{"location":"api/5.0.0/#findcityfromip-function","text":"This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCity(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/5.0.0/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:getCountry(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/5.0.0/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\".","title":"geocode (Stream Function)"},{"location":"api/5.0.0/#geocoordinate-stream-function","text":"The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156.","title":"geocoordinate (Stream Function)"},{"location":"api/5.0.0/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"reversegeocode (Stream Function)"},{"location":"api/5.0.1/","text":"API Docs - v5.0.1 Geo findCityFromIP (Function) This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCityFromIP(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCountryFromIP(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\". geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"5.0.1"},{"location":"api/5.0.1/#api-docs-v501","text":"","title":"API Docs - v5.0.1"},{"location":"api/5.0.1/#geo","text":"","title":"Geo"},{"location":"api/5.0.1/#findcityfromip-function","text":"This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCityFromIP(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/5.0.1/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCountryFromIP(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/5.0.1/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\".","title":"geocode (Stream Function)"},{"location":"api/5.0.1/#geocoordinate-stream-function","text":"The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156.","title":"geocoordinate (Stream Function)"},{"location":"api/5.0.1/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"reversegeocode (Stream Function)"},{"location":"api/latest/","text":"API Docs - v5.0.1 Geo findCityFromIP (Function) This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCityFromIP(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address. findCountryFromIP (Function) This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCountryFromIP(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address. geocode (Stream Function) The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\". geocoordinate (Stream Function) The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156. reversegeocode (Stream Function) This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"latest"},{"location":"api/latest/#api-docs-v501","text":"","title":"API Docs - v5.0.1"},{"location":"api/latest/#geo","text":"","title":"Geo"},{"location":"api/latest/#findcityfromip-function","text":"This function returns the city that is related to the given IP address. Syntax STRING geo:findCityFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related city needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCityFromIP(ip) as city insert into outputStream; This query returns the corresponding city of the given IP address.","title":"findCityFromIP (Function)"},{"location":"api/latest/#findcountryfromip-function","text":"This function returns the country that is related to the given IP address. Syntax STRING geo:findCountryFromIP( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address of which the related country needs to be fetched. STRING No No Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream select geo:findCountryFromIP(ip) as country insert into OutputStream; This query returns the country corresponding to the given IP address.","title":"findCountryFromIP (Function)"},{"location":"api/latest/#geocode-stream-function","text":"The geo code stream function uses basic details relating to a location (e.g., street name, number,etc.) as the input and returns the longitude, latitude, and the address of that location. Syntax geo:geocode( STRING location) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic location The basic location details. For example the Street name, number etc.. STRING No No Extra Return Attributes Name Description Possible Types longitude The longitude of the location. DOUBLE latitude The latitude of the location. DOUBLE address The location details including the longitude and the latitude of the location. STRING Examples EXAMPLE 1 geocode( 5 Avenue Anatole France, 75007 Paris, France ) This query returns the longitude and latitude of the given location with the location details. The expected results are 48.8588871d, 2.2944861d, \"5 Avenue Anatole France, 75007 Paris, France\".","title":"geocode (Stream Function)"},{"location":"api/latest/#geocoordinate-stream-function","text":"The geocoordinate stream function returns the longitude and latitude values of a location relating to a given IPV4 or IPV6 address. Syntax geo:geocoordinate( STRING ip) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic ip The IP address for which the user needs the longitude and latitude values. STRING No No System Parameters Name Description Default Value Possible Parameters apiurl ipInfoDB(https://www.ipinfodb.com/) provides an API toget information relating to an IP address based on their geolocation database.This API provides a URL to get the latitude and longitude of a given IP address. N/A N/A Extra Return Attributes Name Description Possible Types longitude The longitude of the location corresponding to the given IP. DOUBLE latitude The latitude of the location corresponding to the given IP. DOUBLE Examples EXAMPLE 1 define stream IpStream(ip string); from IpStream#geo:geocoordinate(ip) select latitude, longitude insert into OutputStream; This returns the longitude and the latitude of the given IPV4 or IPV6 address. The results for the geocoordinate(95.31.18.119) are 55.7522 and 37.6156.","title":"geocoordinate (Stream Function)"},{"location":"api/latest/#reversegeocode-stream-function","text":"This extension transforms pairs of latitude and longitude coordinates into precise address information. The output contains string properties including the 'streetNumber', 'neighborhood', 'route', 'administrativeAreaLevelTwo', 'administrativeAreaLevelOne', 'country', 'countryCode', 'postalCode', and the 'formattedAddress' in the given order. However, this information is not available for all the geo coordinates. For example, if the latitude and longitude represent a place in a forest, only the high level information such as the country is returned. In such scenarios, \"N/A\" is returned as the value for return attributes of which the values cannot be derived. Syntax geo:reversegeocode( DOUBLE longitude, DOUBLE latitude) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic longitude The longitude value required in order to derive at the location. DOUBLE No No latitude The latitude value required in order to derive at the location. DOUBLE No No Examples EXAMPLE 1 reversegeocode(6.909785, 79.852603) This query returns the precise address information of the given location. In this example, it returns the following value: \"27\", \"N/A\", \"Palm Grove\", \"Colombo\", \"Western Province\", \"Sri Lanka\", \"LK\", \"00300\", \"27 Palm Grove, Colombo 00300, Sri Lanka\".","title":"reversegeocode (Stream Function)"}]}